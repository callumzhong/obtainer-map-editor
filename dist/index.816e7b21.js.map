{"mappings":"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","sources":["src/app.js"],"sourcesContent":["const canvas = document.querySelector('canvas');\nconst puzzleContainer = document.querySelector('.puzzle-container');\nconst puzzleTarget = document.querySelector('.puzzle-target');\nconst puzzleImage = document.querySelector('.puzzle-source');\nlet puzzleTargetXY = [0, 0];\n\nlet isMouseDown = false;\nlet currentTarget = 0;\n\nlet layers = [\n\t// 底層\n\t{\n\t\t// schema: \"canvas_x-canvas_y\":[\"puzzle_x\",\"puzzle_y\"]\n\t},\n\t// 中層\n\t{},\n\t// 上層\n\t{},\n];\n\n//converts data to image:data string and pipes into new browser tab\nconst exportImage = () => {\n\tconst link = document.createElement('a');\n\tlink.download = 'obtainer-map.png';\n\tlink.href = canvas.toDataURL();\n\tlink.click();\n};\n\n//Reset state to empty\nconst clearCanvas = () => {\n\tlayers = [{}, {}, {}];\n\tdraw();\n};\n\nconst setLayer = (newLayer, oldLayer) => {\n\tif (oldLayer) {\n\t\toldLayer.classList.remove('active');\n\t}\n\tcurrentTarget = +newLayer.dataset.layer;\n\tnewLayer.classList.add('active');\n};\n\n//Utility for getting coordinates of mouse click\nconst getCoords = (e) => {\n\tconst { x, y } = e.target.getBoundingClientRect();\n\tconst mouseX = e.clientX - x;\n\tconst mouseY = e.clientY - y;\n\treturn [Math.floor(mouseX / 32), Math.floor(mouseY / 32)];\n};\n\nconst draw = () => {\n\tconst ctx = canvas.getContext('2d');\n\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\tconst size_of_crop = 32;\n\n\tlayers.forEach((layer) => {\n\t\tObject.keys(layer).forEach((key) => {\n\t\t\t//Determine x/y position of this placement from key (\"3-4\" -> x=3, y=4)\n\t\t\tconst positionX = Number(key.split('-')[0]);\n\t\t\tconst positionY = Number(key.split('-')[1]);\n\t\t\tlet [puzzleX, puzzleY] = layer[key];\n\n\t\t\tctx.drawImage(\n\t\t\t\tpuzzleImage,\n\t\t\t\tpuzzleX * 32,\n\t\t\t\tpuzzleY * 32,\n\t\t\t\tsize_of_crop,\n\t\t\t\tsize_of_crop,\n\t\t\t\tpositionX * 32,\n\t\t\t\tpositionY * 32,\n\t\t\t\tsize_of_crop,\n\t\t\t\tsize_of_crop,\n\t\t\t);\n\t\t});\n\t});\n};\n\n//Handler for placing new tiles on the map\nconst addTile = (mouseEvent) => {\n\tvar clicked = getCoords(mouseEvent);\n\tconst key = clicked[0] + '-' + clicked[1];\n\tif (mouseEvent.shiftKey) {\n\t\tdelete layers[currentTarget][key];\n\t} else {\n\t\tlayers[currentTarget][key] = [puzzleTargetXY[0], puzzleTargetXY[1]];\n\t}\n\tdraw();\n};\n\n//Bind mouse events for painting (or removing) tiles on click/drag\ncanvas.addEventListener('mousedown', () => {\n\tisMouseDown = true;\n});\ncanvas.addEventListener('mouseup', () => {\n\tisMouseDown = false;\n});\ncanvas.addEventListener('mouseleave', () => {\n\tisMouseDown = false;\n});\ncanvas.addEventListener('mousedown', addTile);\ncanvas.addEventListener('mousemove', (event) => {\n\tif (isMouseDown) {\n\t\taddTile(event);\n\t}\n});\n\n//Select tile from the Tiles grid\npuzzleContainer.addEventListener('mousedown', (event) => {\n\tpuzzleTargetXY = getCoords(event);\n\tpuzzleTarget.style.left = puzzleTargetXY[0] * 32 + 'px';\n\tpuzzleTarget.style.top = puzzleTargetXY[1] * 32 + 'px';\n});\n\ndocument\n\t.querySelectorAll('.controller__layer button')\n\t.forEach((layer, idx, layers) => {\n\t\tlayer.addEventListener('click', (event) => {\n\t\t\tlet oldLayer = [...layers].find((i) => i.className.includes('active'));\n\t\t\tsetLayer(event.target, oldLayer);\n\t\t});\n\t});\n\ndocument\n\t.querySelector('.controller__buttons>button:nth-child(1)')\n\t.addEventListener('click', clearCanvas);\n\ndocument\n\t.querySelector('.controller__buttons>button:nth-child(2)')\n\t.addEventListener('click', exportImage);\n\npuzzleImage.onload = function () {\n\tdraw();\n};\nconst currentImage =\n\tlocalStorage.getItem('image') ||\n\t'https://assets.codepen.io/21542/TileEditorSpritesheet.2x_2.png';\n\npuzzleImage.src = currentImage;\n"],"names":[],"version":3,"file":"index.816e7b21.js.map","sourceRoot":"/__parcel_source_root/"}